version: "3"

# titles are names of the containers after initialisation (check with docker ps [-a] whether they are running)
# docker comands: start, stop, run, build, pull, push, tag, rm, rmi, images, ps, inspect, cp, logs, login
# ports (-p) <external-port-on-host>:<internal-port-in-container> (mapping of ports)
# volumes (-v) <volume-on-host>:<volume-in-container> (mounts volume-on-host to container)
# docker-compose up -d for making containers detached (other commands: docker-compose run, stop, down (--volumes), config, ps, build, push)
# Other options (in .yml): links (link to <name-other-container>:<variable-name-in-other-container> or if equal only on tag) (--link)

# variables are set in default.env

services:
        php:
                container_name: "php-server-${NAME}-php"
                build: 
                  context: ./docker-php
                # Just for pushing the image
                image: "${ACCOUNTNAME}/php-server-${NAME}:php"
                volumes:
                  - ./php-files:/var/www/include
                networks:
                  - code-network
                links:
                  - mysql:database

        mysql:
                container_name: "php-server-${NAME}-mysql"
                build: 
                  context: ./docker-mysql
                image: "${ACCOUNTNAME}/php-server-${NAME}:mysql"
                # No need for direct access (use phpmyadmin or php), therfor commented out:
                # ports:
                #  - "5000:3306"
                volumes:
                  - ./data:/var/lib/mysql
                environment:
                # Datenbankpasswort vergeben:
                  - MYSQL_ROOT_PASSWORD=data
                networks:
                  - code-network

        nginx:
                container_name: "php-server-${NAME}-nginx"
                build: 
                  context: ./docker-nginx
                image: "${ACCOUNTNAME}/php-server-${NAME}:nginx"
                ports: 
                  - "${PORT_NGINX_80}:80"
                  - "${PORT_NGINX_443}:443"
                links:
                  - php
                volumes: 
                  # original file volume on nginx: /usr/share/nginx/html but in here altered in config files
                  - ./php-files:/var/www/include
                  # Done in Dockerfile:
                  #  - ./docker-nginx/nginx.conf:/etc/nginx
                  #  - ./docker-nginx/default.conf:/etc/nginx/conf.d
                networks:
                  - code-network

        phpmyadmin:
                container_name: "php-server-${NAME}-phpmyadmin"
                build:
                  context: ./docker-phpmyadmin
                image: "${ACCOUNTNAME}/php-server-${NAME}:phpmyadmin"
                ports:
                  - "${PORT_PHPMYADMIN}:80"
                environment:
                  - PMA_HOST=mysql
                  - PMA_PORT=3306 
                links:
                  - mysql
                networks:
                  - code-network

networks:
        code-network:
                driver: bridge

# volumes:
